https://leetcode.com/problems/palindrome-partitioning/


class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>>ans;
        vector<string>temp;
        int n=s.size();
        auto check=[&](int start,int end)->int{
            while(start<end){
                if(s[start++]!=s[end--])return 0;
            }
            return 1;
        };
        auto f=[&](auto &&self,int ind,vector<string>&temp)->void{
            if(ind>=n){
                ans.push_back(temp);
            }
            for(int i=ind;i<n;i++){
                if(check(ind,i)==1){
                    string k=s.substr(ind,i-ind+1);
                    temp.push_back(k);
                    self(self,i+1,temp);
                    temp.pop_back();
                }
            }
        };
        f(f,0,temp);
        return ans;
    }
};
