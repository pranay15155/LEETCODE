https://leetcode.com/problems/palindrome-partitioning/


class Solution {
public:
    int check(string &s){
        int n=s.size();
        for(int i=0;i<n/2;i++){
            if(s[i]!=s[n-1-i])return 0;
        }
        return 1;
    }
    void f(int ind,string &s,vector<string>&temp,vector<vector<string>>&ans){
        if(ind>=s.size()){
          ans.push_back(temp);
        }
        for(int i=ind;i<s.size();i++){
            string a=s.substr(ind,i-ind+1);
            if(check(a)){
                temp.push_back(a);
                f(i+1,s,temp,ans);
                temp.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>>ans;
        vector<string>temp;
        f(0,s,temp,ans);
        return ans;
    }
};
