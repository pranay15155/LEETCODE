https://leetcode.com/problems/single-number-ii/description/


//METHOD-1
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int ans=INT_MAX;
        for(int i=1;i<nums.size();i+=3){
            if(nums[i-1]!=nums[i+1]){
                ans=nums[i-1];
                break;
            }
        }
        if(ans==INT_MAX)return nums[nums.size()-1];
        return ans;
    }
};


//METHOD-2
class Solution {
public:
    int singleNumber(vector<int>& nums) {
       vector<int>count(32,0); //32 is taken because of negative numbers else 31 will do the
       //work for only positive integers 
       for(int i=0;i<32;i++){
        for(int j=0;j<nums.size();j++){
            if(nums[j]&(1<<i))count[i]++;
        }
        count[i]%=3;
       }
       int ans=0;
       int temp=1;
       for(int i=0;i<32;i++){
         if(count[i]){
            ans+=temp;
         }
         temp=temp<<1;
       }
       return ans;
    }
};
//10
//10
//11
//11

//COUNT NO OF BITS SET AND DO IT MODULO 3 FOR 1 TILL 31

