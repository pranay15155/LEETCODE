https://leetcode.com/problems/longest-palindromic-substring/description/?envType=problem-list-v2&envId=dynamic-programming

class Solution {
public:
    bool f(int i,int j,string &s,vector<vector<int>>&dp){
        if(i>=j)return 1;
        if(dp[i][j]!=-1)return dp[i][j];
        if(s[i]!=s[j])return dp[i][j]=0;
        return dp[i][j]=f(i+1,j-1,s,dp);
    }
    string longestPalindrome(string s) {
        int n=s.size();
        int start=0;
        int maxlength=0;
        vector<vector<int>>dp(n,vector<int>(n,-1));
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(f(i,j,s,dp)){
                    if(j-i+1>maxlength){
                        maxlength=j-i+1;
                        start=i;
                    }
                }
            }
        }
        return s.substr(start,maxlength);
    }
};

