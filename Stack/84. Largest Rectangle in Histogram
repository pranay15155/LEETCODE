https://leetcode.com/problems/largest-rectangle-in-histogram/description/

class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        vector<int> nsl(n, 0), nsr(n, 0);
        stack<int> st;
        for (int i = n - 1; i >= 0; i--) {
            if (st.size() == 0) {
                nsr[i] = n;
                st.push(i);
            } else {
                while (st.size() && heights[st.top()] >= heights[i]) {
                    st.pop();
                }
                if (st.size() == 0) {
                    nsr[i] = n;
                } else
                    nsr[i] = st.top();
                st.push(i);
            }
        }
        d(nsr);
        st = stack<int>();
        for (int i = 0; i < n; i++) {
            if (st.size() == 0) {
                nsl[i] = -1;
                st.push(i);
            } else {
                while (st.size() && heights[st.top()] >= heights[i]) {
                    st.pop();
                }
                if (st.size() == 0) {
                    nsl[i] = -1;
                } else
                    nsl[i] = st.top();
                st.push(i);
            }
        }
        d(nsl);
        long long ans = 0;
        for (int i = 0; i < n; i++) {
            long long length = (nsr[i] - i - 1) + (i - nsl[i] - 1) + 1;
            // d(length);
            ans = max(ans, length * heights[i]);
        }
        return ans;
    }
};

//(nsr[i] - i - 1)-->no of  greater than or equal rectangles at right

//(i - nsl[i] - 1)-->no of greater than or equal rectangles at left

//+1 ->for itself

//edge case -->[1,1]
